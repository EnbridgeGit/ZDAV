FUNCTION Z_AW_DATA_PROFILE.
*"----------------------------------------------------------------------
*"*"Local interface:
*"       IMPORTING
*"             VALUE(P_CODE) LIKE  DD02L-TABNAME
*"             VALUE(P_TABLE) LIKE  DD02L-TABNAME
*"             VALUE(P_FIELD) LIKE  DD03L-FIELDNAME OPTIONAL
*"       TABLES
*"              WRITES STRUCTURE  LISTZEILE
*"----------------------------------------------------------------------

* work area
DATA: INFOLINE LIKE LISTZEILE-ZEILE,
      WRK LIKE LISTZEILE-ZEILE.

DATA: CNT TYPE I,
      CVAL LIKE LISTZEILE-ZEILE.

data: list_tab(80) occurs 1 with header line,
      where_tab(80) occurs 3 with header line,
      group_tab(80) occurs 3 with header line,
      order_tab(80) occurs 3 with header line.

DATA: BEGIN OF WA1 OCCURS 1,
      MINVAL(255),
      MAXVAL(255),
      END OF WA1.

DATA: BEGIN OF WA2 OCCURS 1,
      VAL(255),
      COLCNT TYPE I,
      END OF WA2.

REFRESH WRITES.
CLEAR: WRITES,
       INFOLINE,
       WRK,
       CVAL.

IF P_CODE IS INITIAL OR P_TABLE IS INITIAL.
  EXIT.
ENDIF.

SELECT TABNAME INTO WRK FROM DD02L UP TO 1 ROWS
WHERE TABNAME = P_TABLE AND AS4LOCAL = 'A'.
ENDSELECT.

IF SY-SUBRC <> 0.
  EXIT.
ENDIF.

CASE P_CODE.
  WHEN 'CNT'. " Get count
    SELECT COUNT(*) FROM (P_TABLE) INTO CNT.
    INFOLINE = CNT.
    APPEND INFOLINE TO WRITES.
  WHEN 'CNTD'. " Get count (distinct)
    IF P_FIELD IS INITIAL.
      EXIT.
    ENDIF.
    SELECT FIELDNAME INTO WRK FROM DD03L UP TO 1 ROWS
    WHERE TABNAME = P_TABLE AND FIELDNAME = P_FIELD AND AS4LOCAL = 'A'.
    ENDSELECT.
    IF SY-SUBRC <> 0.
      EXIT.
    ENDIF.
    CLEAR INFOLINE.
    CONCATENATE 'COUNT( DISTINCT'
                P_FIELD
                ')' INTO INFOLINE SEPARATED BY SPACE.
    APPEND INFOLINE TO LIST_TAB.
    CLEAR INFOLINE.
    SELECT (LIST_TAB) INTO CNT FROM (P_TABLE).
    INFOLINE = CNT.
    APPEND INFOLINE TO WRITES.
    ENDSELECT.
  WHEN 'CNTN'. " Get count (NULL)
    IF P_FIELD IS INITIAL.
      EXIT.
    ENDIF.
    SELECT FIELDNAME INTO WRK FROM DD03L UP TO 1 ROWS
    WHERE TABNAME = P_TABLE AND FIELDNAME = P_FIELD AND AS4LOCAL = 'A'.
    ENDSELECT.
    IF SY-SUBRC <> 0.
      EXIT.
    ENDIF.
    CLEAR INFOLINE.
    CONCATENATE P_FIELD ' IS NULL' INTO INFOLINE.
    APPEND INFOLINE TO WHERE_TAB.
    CLEAR INFOLINE.
    SELECT COUNT(*) FROM (P_TABLE) INTO CNT WHERE (WHERE_TAB).
    INFOLINE = CNT.
    APPEND INFOLINE TO WRITES.
  WHEN 'MINMAX'. " Get min, max
    IF P_FIELD IS INITIAL.
      EXIT.
    ENDIF.
    SELECT FIELDNAME INTO WRK FROM DD03L UP TO 1 ROWS
    WHERE TABNAME = P_TABLE AND FIELDNAME = P_FIELD AND AS4LOCAL = 'A'.
    ENDSELECT.
    IF SY-SUBRC <> 0.
      EXIT.
    ENDIF.
    CONCATENATE 'MIN('
                P_FIELD
                ') AS minval'
                INTO INFOLINE SEPARATED BY SPACE.
    APPEND INFOLINE TO LIST_TAB.
    CLEAR INFOLINE.
    CONCATENATE 'MAX('
                P_FIELD
                ') AS maxval'
                INTO INFOLINE SEPARATED BY SPACE.
    APPEND INFOLINE TO LIST_TAB.
    CLEAR INFOLINE.
*    select (list_tab) from (p_table) into (infoline, cval).
    SELECT (LIST_TAB) FROM (P_TABLE) INTO WA1.
    CLEAR WRK.
    CONDENSE: WA1-MINVAL, WA1-MAXVAL.
    CONCATENATE WA1-MINVAL
                '|'
                WA1-MAXVAL INTO WRK SEPARATED BY SPACE.
    APPEND WRK TO WRITES.
    ENDSELECT.
  WHEN 'GRPBY'. " Get group-by numbers
    IF P_FIELD IS INITIAL.
      EXIT.
    ENDIF.
    SELECT FIELDNAME INTO WRK FROM DD03L UP TO 1 ROWS
    WHERE TABNAME = P_TABLE AND FIELDNAME = P_FIELD AND AS4LOCAL = 'A'.
    ENDSELECT.
    IF SY-SUBRC <> 0.
      EXIT.
    ENDIF.
    CONCATENATE P_FIELD
                'AS val COUNT(*) AS COLCNT'
                INTO INFOLINE SEPARATED BY SPACE.
    APPEND INFOLINE TO LIST_TAB.
    CLEAR INFOLINE.
    CONCATENATE P_FIELD
                'IS NOT NULL'
                INTO INFOLINE SEPARATED BY SPACE.
    APPEND INFOLINE TO WHERE_TAB.
    CLEAR INFOLINE.
    INFOLINE = P_FIELD.
    APPEND INFOLINE TO GROUP_TAB.
    CLEAR INFOLINE.
    CONCATENATE 'COLCNT DESCENDING'
                'val ASCENDING'
                INTO INFOLINE SEPARATED BY SPACE.
    APPEND INFOLINE TO ORDER_TAB.
    CLEAR INFOLINE.
    SELECT (LIST_TAB) INTO WA2
    FROM (P_TABLE) WHERE (WHERE_TAB) GROUP BY (GROUP_TAB)
    ORDER BY (ORDER_TAB).
    CLEAR WRK.
    CVAL = WA2-COLCNT.
    CONDENSE CVAL NO-GAPS.
    CONCATENATE WA2-VAL
                '|'
                CVAL INTO WRK SEPARATED BY SPACE.
    APPEND WRK TO WRITES.
    ENDSELECT.
  WHEN OTHERS. " Undefined proc. code
    CLEAR INFOLINE.
ENDCASE.

ENDFUNCTION.

FORM Z_AW_DATA_PROFILE_GETV CHANGING VERSION TYPE C.

VERSION = '6.5.1.0'.

ENDFORM.
